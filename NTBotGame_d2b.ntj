function NTMain() {
	if (!Load("NTBot/tools/NTLogHandler.ntj")) {
		NTC_SendLogToOOG(NTC_LOG_COMMON, COLOR_1 + "Error: Logger failed to initialize");
	}
	Delay(1000);

	InitLife = me.hp;

	NTC_IncludeLibs();
	NTC_IncludeConfig("NTBot/char_configs");

	try {
		NT_LoadConfig();
	}
	catch (e) {
		while(me.ingame){
			Print(COLOR_1 + "Error in your char config file");
			Print(COLOR_1 + "You must correct the error before the bot will run");
			Print(COLOR_2 + "To get help on this error visit");
			Print(COLOR_2 + "www.projectetal.com/wiki -> load config errors");
			Delay(10000);
		}
	}
	//Print(NTConfig_FreeSpace);

	if (NTConfig_MinIngameTime > 0) {
		endtime = GetTickCount() + 1000 * 60 * NTConfig_MinIngameTime;
	}

	if(!me.gamename && me.GetStat(12) > 90 && !me.playertype) { Say("/players 5"); } // For softcore SP players to increase MF and such

	if(NTConfig_FreeSpace == 0)
		Print(COLOR_2 + "Please don't forget to set NTConfig_FreeSpace in your character config to avoid your inv filling");

	NT_ClearMessages(); // leech improvements

	if (!NTSI_LoadNIPFiles("NTBot/item_configs")) {
		NTC_SendLogToOOG(NTC_LOG_COMMON, COLOR_1 + "Exiting Game- Either no inventory on character or invalid NIP filename/path in character configuration");
		ExitGame();
	}
	NTU_LogExitStatus("F");
	if(NTConfig_StartDelay > 0) {
		NTC_Delay(NTConfig_StartDelay);
	}

	GetPath(me.areaid, me.x, me.y, me.x, me.y, true);

	SetUIState(0x0A, true);

	if(!NTT_PutBackEnigma()) {
		NTC_Delay(240000); // Wait 4 mins to prevent r/d 240000
		ExitGame();
	}

	if(NTConfig_CheckPassword && !me.gamepassword){
		Print(COLOR_1 + "1No password found exiting game");//s
		NTC_SendLogToOOG(NTC_LOG_COMMON, COLOR_1 + "Exiting Game- No Password");
		NTC_Delay(2000);
		ExitGame();
	}

	Corpses = NTT_GetCorpses();
	if (Corpses > 0 || InitLife < 10)
		NTU_DeathLog(Corpses, InitLife);
	if(NTConfig_Script.length > 0)
	{
		NTCU_InitCubing();
		NTT_ClearInventory();
		NTT_ClearBelt();

		if(!NTT_LookForEnigma()) {
			if (GetUIState(0x01))
				SetUIState(0x01, false);
			NTC_Delay(240000); // Wait 4 mins to prevent r/d 240000
			ExitGame();
		}

		if(NTConfig_GoWestFromLut){ // if bot starts in act 2 use warriv to go to act 1
			GoWestFromLutGholein();
		}

		Load("NTBot/tools/NTToolsThread.ntj");

		if(NTConfig_HostileHandler)
			Load("NTBot/tools/NTHostHandler.ntj");

		if(NTConfig_Announcer)
			Load("NTBot/tools/NTLevelAnnouncer.ntj");

		if(DPSMeter)
			Load("NTBot/tools/DPS.ntj");
			
		Load("NTBot/tools/ChatR.ntj");

		RegisterEvent(EVENT_GAMEMSG, NT_GameMsgEvents);
		RegisterEvent(EVENT_KEYDOWN, NT_KeyEvents);
		RegisterEvent(EVENT_SCRIPTMSG, NT_ScriptMsgEvents);

		Load("NTBot/bots/" + NTConfig_Script[CurScriptIndex]);
		SetStatusText(Rev + " "+ NTConfig_Script[CurScriptIndex]);

		Include("libs/common/NTSnagit.ntl");
		NTSI_ClearIgnoredItems();

		NTC_LogCurScript(NTConfig_Script[CurScriptIndex]);//jinay item log

		var leaderParty = false;
		
		// Dynamic leaders
		var NTLeader_LoggedFromFile = NT_File("logs/" + me.account + ".leaderName.txt", 0);
		
		while(!LastScript || CloneDiabloNotify || SoJNotify || NTC_InMyParty(NTConfig_Leader) || NTC_InMyParty(NTLeader_LoggedFromFile)) // SoJNotify is a part of soj addon
		{
			NTC_Delay(1000);

			for(var i = 0 ; i < NTConfig_Script.length && !leaderParty ; i++)
			{
				if(NTConfig_Script[i].toLowerCase().indexOf("leech") != -1 || NTConfig_Script[i].toLowerCase().indexOf("helper") != -1)
				{
					for(var j = 0 ; j < NTConfig_PartyMaxTime && !NTC_InMyParty(NTConfig_Leader) && !NTC_InMyParty(NTLeader_LoggedFromFile) ; j++)
						Delay(1000);

					if(NTC_InMyParty(NTConfig_Leader) || NTC_InMyParty(NTLeader_LoggedFromFile))
					{
						leaderParty = true;
					}
					else
					{
						NTC_PrintPossibleLeaders();
						Print(COLOR_1 + "Can't find leader!");
						Delay(500);
						Print(COLOR_1 + "You either have it spelled or cased wrong");
						Delay(500);
						Print(COLOR_1 + "Or leader is not in game");
						Delay(500);
						Print(COLOR_1 + "Check logs/namelog/" + me.charname + "-leaderName.txt for possible leader names from this game"); // this should print a list of all toons in game so people can C/P if they are having probs
						Delay(1500);
						ExitGame();
					}
					break;
				}
			}

			if(LastScript && !checkActOnce && leaderParty && NTC_InMyParty(NTConfig_Leader)) {
				NTTM_CheckAct();
				checkActOnce = true; // this is added so if you need to go back in someplace the bot doesn't keep towning
			}

			if(leaderParty && !NTC_InMyParty(NTConfig_Leader) && !NTC_InMyParty(NTLeader_LoggedFromFile)){
				Delay(350);
				_Checkscript = GetScript();
				if(_Checkscript){
					NTC_StopScriptLeecher();
					Delay(150);
				}
				NTC_CancelMenus();
				Delay(NTConfig_LeechExitDelay);
				ExitGame();
			}

			if(SoJNotify)
			{
				SoJElapsedTime += 1;

				if(LastScript)
				{
					NTTM_CheckAct();
					SetStatusText(COLOR_4 + "Waiting for SoJ sales... " + COLOR_0 + (NTConfig_SoJWaitTime*60-SoJElapsedTime));
				}

				if(SoJElapsedTime >= NTConfig_SoJWaitTime*60)
					SoJNotify = false;
			}
		}
	}
	if(NTConfig_PublicMode && NTConfig_PropsForEtal > 0) {
		Include("NTBot/char_configs/EtalPR.ntl");
		for(var i = 0 ; i < NTConfig_PropsForEtal ; i++) {
			Say(NTC_RandomSelect(etalSpam));
			Delay(1500);
		}
		Say("Check out ProjectEtal.com");
		Delay(1000); // change this to 1 second
	}

    if (endtime != null || NTConfig_MinIngameTime > 0 && GetTickCount() < endtime) {
		NTTM_CheckAct();
        var gameidle = parseInt((endtime - GetTickCount())/1000);        
        for(var i = 0 ; i < gameidle ; i++) {
			SetStatusText("Waiting " + (gameidle-i) + " seconds to exit game!");
            Delay(1000);
        }
    }

	ExitGame();
	Delay(3000);// testing to avoid repetive stats sent to manager log
}
